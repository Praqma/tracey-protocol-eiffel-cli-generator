apply plugin: 'application'
apply plugin: 'maven-publish'
apply plugin: 'com.palantir.git-version'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'gradle.plugin.com.palantir.gradle.gitversion:gradle-git-version:0.5.2'
    }
}

def groupId = 'net.praqma.tracey.protocol.eiffel.cli'
def artifactId = 'tracey-protocol-eiffel-cli-generator'
def version = gitVersion()
mainClassName = 'net.praqma.tracey.protocol.eiffel.cli.Main'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}


dependencies {
    compile 'net.sourceforge.argparse4j:argparse4j:0.7.0'
    compile 'org.slf4j:slf4j-log4j12:1.7.21'
    compile 'com.github.Praqma:tracey-protocol-eiffel:a91f5b91ba662fd894798f3e7848f3fcc2f5dee5'
    compile 'com.github.Praqma:commit-message-parser:8834a4b0fe'
    checkstyle 'com.puppycrawl.tools:checkstyle:5.9'
    pmd        'net.sourceforge.pmd:pmd-java:5.2.3'
    findbugs   'com.google.code.findbugs:findbugs:3.0.1'
}

task runDebug(type: JavaExec, dependsOn: classes) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    args(['-d', '-f', 'out.json', '-i', 'myDomain', 'EiffelSourceChangeCreatedEvent', '-p', 'Praqma/tracey-protocol-eiffel-cli-generator'])
}

jar {
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    manifest {
        attributes('Main-Class': mainClassName,
                   'Implementation-Version': version,
                   'Implementation-Title': artifactId,
                   'Implementation-Vendor-Id': groupId)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

// Static code analysis
tasks.withType(FindBugs) {
    ignoreFailures false
    reports {
    xml.enabled false
        html.enabled true
    }
}